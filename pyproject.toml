[build-system]
requires = ["setuptools >= 62", "versioningit ~= 3.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "datalab-api"
readme = "README.md"
description = "A Python API for instances of the datalab data management platform (https://github.com/the-grey-group/datalab)."
keywords = []
license = { text = "MIT" }
authors = [{ name = "Matthew Evans", email = "matthew@ml-evs.science" }]
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Scientific/Engineering",
]

requires-python = ">=3.9"
dependencies =[
    "httpx ~= 0.27", # better HTTP requests
    "bokeh ~= 2.4",  # interactive plots from datalab directly
    "rich ~= 13.0",  # nicer terminal output
]


[project.optional-dependencies]
dev = [
    "pre-commit ~= 3.0",
    "pytest ~= 8.0",
    "pytest-cov ~= 5.0",
    "respx ~= 0.21",
]

docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python-legacy]",
    "mkdocs-awesome-pages-plugin",
    "mkdocs-jupyter",
]

cli = [
    "typer ~= 0.9",   # command line interface
    "click-shell ~= 2.1", # REPL-like interface
]

all = [
    "datalab-api[dev,docs,cli]"
]

[project.scripts]
datalab = "datalab_api.cli:app"

[project.urls]
homepage = "https://github.com/datalab-org/datalab-api"
repository = "https://github.com/datalab-org/datalab-api"
documentation = "https://datalab-python-api.readthedocs.io"
changelog = "https://github.com/datalab-org/datalab-api/releases"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.1"


[tool.mypy]
# plugins = "pydantic.mypy"
ignore_missing_imports = true
follow_imports = "skip"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "W", "Q"]
ignore = ["E501", "E402"]
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []
per-file-ignores = {}
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
